# Generated by Django 4.2 on 2023-09-30 09:58

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Lesson',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Название урока')),
                ('video_link', models.URLField(unique=True, verbose_name='Ссылка на урок')),
                ('duration', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1, message='Длительность урока не может быть меньше 1 секунды.'), django.core.validators.MaxValueValidator(32767, message='Длительность урока не может быть больше 32767 секунд.')], verbose_name='Длительность урока (в секундах)')),
            ],
            options={
                'verbose_name': 'Урок',
                'verbose_name_plural': 'Уроки',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True, verbose_name='Название продукта')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='products', to=settings.AUTH_USER_MODEL, verbose_name='Владелец продукта')),
            ],
            options={
                'verbose_name': 'Продукт',
                'verbose_name_plural': 'Продукты',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProductAccess',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_accesses', to='lessons.product', verbose_name='Продукт')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_accesses', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Доступ к продукту',
                'verbose_name_plural': 'Доступ к продуктам',
                'ordering': ('product__name',),
            },
        ),
        migrations.CreateModel(
            name='LessonView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('view_time', models.PositiveSmallIntegerField(verbose_name='Время просмотра')),
                ('last_watch', models.DateTimeField(auto_now=True, verbose_name='Дата последнего просмотра')),
                ('lesson', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_views', to='lessons.lesson', verbose_name='Урок')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lesson_views', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Просмотр урока',
                'verbose_name_plural': 'Просмотры уроков',
                'ordering': ('lesson__name',),
            },
        ),
        migrations.AddField(
            model_name='lesson',
            name='product',
            field=models.ManyToManyField(related_name='lessons', to='lessons.product', verbose_name='Продукты'),
        ),
        migrations.AddConstraint(
            model_name='productaccess',
            constraint=models.UniqueConstraint(fields=('user', 'product'), name='unique_access'),
        ),
        migrations.AddConstraint(
            model_name='lessonview',
            constraint=models.UniqueConstraint(fields=('user', 'lesson'), name='unique_lesson_view'),
        ),
    ]
